
Feisty Meow Concerns Ltd. is a small software shop that concentrates on building high quality,
portable, open source projects in a variety of languages (primarily bash, perl, python, C++,
and Java).  Here are some highlights of our main products:

  Bookmark Processing Tools - can take a mozilla bookmark file or arbitrary
     web page and extract all the links out of it, building a csv database of
     web links.  Using that database, a variety of output formats are
     provided, including one that outputs a mozilla bookmark file again.
     The most useful feature is probably the marks checker that operates on
     our csv format and that locates all unreachable links in the file and
     separates them out.

  CROMP protocol - supports transmission of objects across the network and
     provides a platform independent method for RPC and other types of
     communication.

  Octopus design pattern - the underpinning of the CROMP protocol.  An octopus
     has an arbitrary number of tentacles (no, not just eight) which are each
     responsible for consuming a different type of object (or datum).

  Fast Templates and Portable Abstractions - the class libraries of Feisty Meow
     provide numerous different data structures and programming language
     abstractions (like threads and state machines).  There are also some
     fairly ancient templates (in use since late 80s) which in many cases
     perform faster than their STL analogues.

  CLAM System - Feisty Meow is the home site of the CLAM makefile system.  The
     CLAM system is a flexible and extensible method for building C++ and
     C# files using makefiles.

Prerequisites:

  Software required to compile under Linux:
    curl-devel
    openmotif-devel
    openssl-devel
    wxGTK-devel

  Software required to compiler under MS-windows:
    The free Microsoft compiler should build Feisty Meow but it is untested.
    The full version of MS Visual Studio 2010 (version 10) is supported.
    Gnu C++ should compile Feisty Meow but it is also untested recently.

Quick Start:

  Run the following commands to bootstrap the Feisty Meow libraries, once you
  have downloaded the archive or retrieved them via CVS (assuming that you
  have stored the files in ~/feisty_meow):

    bash ~/feisty_meow2/scripts/generator/bootstrap_build.sh

  This should create the 'makedep' dependency checking tool and the version
  tagging tool and then go through the rest of the build.

  Once you've got a bootstrapped build, you can clean out all the files with:

    bash ~/feisty_meow2/scripts/generator/whack_build.sh clean

  And if you want to load the build environment for doing makes inside the
  feisty_meow hierarchies, you can either run a sub-shell with the environment:

    bash ~/feisty_meow2/scripts/generator/build_variables.sh

  or you can load them into the current shell:

    bv=~/feisty_meow2/scripts/generator/build_variables.sh; source $bv $bv

  (The double reference is required since a sourced script does not get any of
  the command-line parameters from the parent script.)

  More information is available at the official site http://feistymeow.org


